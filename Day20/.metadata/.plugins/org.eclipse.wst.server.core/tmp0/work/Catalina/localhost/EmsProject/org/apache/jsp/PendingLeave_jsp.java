/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.32
 * Generated at: 2019-08-29 12:12:35 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.hcl.ems.Employee;
import com.hcl.ems.LeaveHistory;
import java.util.List;
import com.hcl.ems.EmployeeDAO;

public final class PendingLeave_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("com.hcl.ems.Employee");
    _jspx_imports_classes.add("com.hcl.ems.EmployeeDAO");
    _jspx_imports_classes.add("com.hcl.ems.LeaveHistory");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<form method=\"get\" action=\"ApproveDeny.jsp\">\r\n");
      out.write("<table border=\"3\">\r\n");
      out.write("\t");

		String user=(String)session.getAttribute("user");
		out.println("Showing Pending Leaves for " +user);
		EmployeeDAO dao=new EmployeeDAO();
		List<Integer> lstData=dao.showSubordinates(Integer.parseInt(user));
		out.println(lstData);
		Employee emp=null;
		List<LeaveHistory> history=dao.pendingLeaves(Integer.parseInt(user));
		for(int i :lstData) {
			emp=dao.myDetails(i);
		
      out.write("\r\n");
      out.write("\t\t<tr bgcolor=\"blue\">\r\n");
      out.write("\t\t\t<th>Employee ID </th>\r\n");
      out.write("\t\t\t<td> ");
      out.print(i);
      out.write("</td>\r\n");
      out.write("\t\t\t<th>Employee Name </th>\r\n");
      out.write("\t\t\t<td> ");
      out.print(emp.getEmp_name() );
      out.write("\r\n");
      out.write("\t\t\t<th>Employee Leave Balance </th>\r\n");
      out.write("\t\t\t<td>");
      out.print(emp.getEmp_leave_balance() );
      out.write(" </td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t");

		for(LeaveHistory h : history) {
			if(i==h.getEmp_Id()) {
		
      out.write("\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<th>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</th>\r\n");
      out.write("\t\t\t<th>Leave ID </th>\r\n");
      out.write("\t\t\t<th>No.Of days</th>\r\n");
      out.write("\t\t\t<th>Start date</th>\r\n");
      out.write("\t\t\t<th>End Date</th>\r\n");
      out.write("\t\t\t<th>Leave Type</th>\r\n");
      out.write("\t\t\t<th>Leave Status</th>\r\n");
      out.write("\t\t\t<th>Leave Reason</th>\r\n");
      out.write("\t\t\t<th>Apply Status</th>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td></td>\r\n");
      out.write("\t\t\t <td>");
      out.print(h.getLea_Id() );
      out.write(" </td>\r\n");
      out.write("\t\t\t <td>");
      out.print(h.getLea_No_Of_Days() );
      out.write("  </td>\r\n");
      out.write("\t\t\t <td>");
      out.print(h.getLea_Start_Date() );
      out.write(" </td>\r\n");
      out.write("\t\t\t <td>");
      out.print(h.getLea_End_Date() );
      out.write(" </td>\r\n");
      out.write("\t\t\t <td> ");
      out.print(h.getLea_Type() );
      out.write(" </td>\r\n");
      out.write("\t\t\t <td> ");
      out.print(h.getLea_Status() );
      out.write(" </td>\r\n");
      out.write("\t\t\t <td>");
      out.print(h.getLea_Reason() );
      out.write(" </td>\r\n");
      out.write("\t\t\t <td>\r\n");
      out.write("\t\t\t \t<input type=\"checkbox\" name=\"chkStatus\" value=");
      out.print(h.getLea_Id() );
      out.write(" />\r\n");
      out.write("\t\t\t </td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t");

			}
		}
		}
		
      out.write("\r\n");
      out.write("\t\t\r\n");
      out.write("</table>\r\n");
      out.write("<input type=\"submit\" value=\"Approve/Deny\" />\r\n");
      out.write("</form>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
